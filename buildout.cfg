
# http://pypi.python.org/pypi/zc.buildout#predefined-buildout-options

[buildout]
index = http://pypi01.xsignnet.local/simple/
# this setup.py and all the git sub-repositories we use
develop = .
parts = setup.py __version__.py scripts
# do not use eggs from site-packages
include-site-packages = false
# bin/buildout will be generated with code that makes the paths relative
relative-paths = true
# unzip safe-zip eggs. Zipped eggs make debugging more difficult
unzip = true
# location of the download cache is specified by the download-cache option
download-cache = .cache
log-level = DEBUG

[project]
# the project name, this will be copied into setup.py
name = infinidat.host.recipe.version
VERSION_FILE = ${buildout:directory}/src/infinidat/host/recipe/version/__version__.py

# The namespace_packages argument to setup() lets you declare your project's namespace packages, 
# so that they will be included in your project's metadata. 
# The argument should list the namespace packages that the egg participates in.
namespace_packages = 'infinidat', 'infinidat.host', 'infinidat.host.recipe'
# A string or list of strings specifying what other distributions need to be installed when this one is
# We use namespaced packages so we must require setuptools
install_requires = 'setuptools', 'zc.buildout', 'collective.recipe.template'

[setup.py]
recipe = infinidat.host.recipe.version:setup.py

[__version__.py]
recipe = infinidat.host.recipe.version:__version__.py

[scripts]
recipe = zc.recipe.egg
relative-paths = true
unzip = true
# this will install the dependencies as defined in setup.py
eggs = ${project:name}
    ipython
    nose
    coverage
    mock
# this will create the scripts from all dependencies
dependent-scripts = true 
# implicit script generation

[pydev]
recipe = pb.recipes.pydev
eggs = ${scripts:eggs}

