
[buildout]
develop = .
parts = setup.py __init__.py scripts
include-site-packages = false
relative-paths = true
unzip = true
download-cache = .cache

[project]
name = infi.recipe.template.version
install_requires = 'setuptools', 'zc.buildout', 'collective.recipe.template', 'gitpy'
namespace_packages = 'infi', 'infi.recipe', 'infi.recipe.template'
description = 'an extension to collective.recipe.template'
long_description = """this extends collective.recipe.template by adding adding a new section:
    [infi.recipe.template.version],
    version = <git describe>.strip("v"),
    author = <git head commit author>,
    author_email = <git head commit author email>,

    with this, you can inject the version into setup.py and modules"""

[setup.py]
recipe = infi.recipe.template.version
input = setup.in
output = setup.py

[__init__.py]
recipe = infi.recipe.template.version
output = src/infi/recipe/template/version/__init__.py
input = inline:
    __import__("pkg_resources").declare_namespace(__name__)
    __version = "${infi.recipe.template.version:version}"

[scripts]
recipe = zc.recipe.egg
relative-paths = true
unzip = true
# this will install the dependencies as defined in setup.py
eggs = ${project:name}
    ipython
    nose
    coverage
    mock
# this will create the scripts from all dependencies
dependent-scripts = true 
# implicit script generation

[pydev]
recipe = pb.recipes.pydev
eggs = ${scripts:eggs}

